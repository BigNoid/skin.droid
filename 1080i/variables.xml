<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <variable name="NotificationBarColorVar">
        <value condition="ControlGroup(11111).HasFocus | ControlGroup(11121).HasFocus">Blue</value>
        <value>grey</value>
    </variable>

    <variable name="ListHeaderVar">
        <value condition="!IsEmpty(Container.FolderName)">$INFO[Container.FolderName]</value>
        <value>$INFO[System.CurrentWindow]</value>
    </variable>

    <variable name="GlobalBackgroundVar">
        <value condition="Player.hasMedia  + !IsEmpty(Player.Art(fanart))">$INFO[Player.Art(fanart)]</value>
        <value condition="!IsEmpty(ListItem.Property(Fanart_Image))">$INFO[ListItem.Art(fanart)]</value>
        <value condition="!IsEmpty(Skin.String(DefaultBG))">$INFO[Skin.String(DefaultBG)]</value>
        <!--<value condition="Window.IsActive(home)">$INFO[Window(home).Property(RandomMovie.1.Art(fanart))]</value>-->
        <value>special://skin/backgrounds/default_bg.jpg</value>
    </variable>

    <variable name="RepeatButtonVar">
        <value condition="!Playlist.IsRepeat + !Playlist.IsRepeatOne">osd/dark/repeat_nf.png</value>
        <value condition="Playlist.IsRepeatOne">osd/dark/repeat_one_nf.png</value>
        <value condition="Playlist.IsRepeat">osd/dark/repeat_all_nf.png</value>
    </variable>

    <variable name="RepeatButton2Var">
        <value condition="!Playlist.IsRepeat + !Playlist.IsRepeatOne">osd/repeat_nf.png</value>
        <value condition="Playlist.IsRepeatOne">osd/repeat_one_nf.png</value>
        <value condition="Playlist.IsRepeat">osd/repeat_all_nf.png</value>
    </variable>

    <variable name="ShuffleButtonVar">
        <value condition="Playlist.IsRandom">osd/shuffle_nf.png</value>
        <value>osd/shuffle__off_nf.png</value>
    </variable>

    <variable name="ThemeColorVar">
        <value>Blue2</value>
    </variable>
    <variable name="ScrollbarColorVar">
        <value condition="![Control.HasFocus(60) | Control.HasFocus(61)]">FFFFFFFF</value>
        <value>$VAR[ThemeColorVar]</value>
    </variable>

    <variable name="LandscapeThumbVar">
        <value condition="Container.Content(episodes)">$INFO[ListItem.Art(thumb)]</value>
        <value condition="!IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
        <value>$INFO[ListItem.Art(fanart)]</value>
    </variable>
    <variable name="BannerThumbVar">
        <value condition="!IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>
    <variable name="PosterThumbVar">
        <value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>
    <variable name="InfoPosterThumbVar">
        <value condition="Container.Content(episodes) + !IsEmpty(ListItem.Art(season.poster))">$INFO[ListItem.Art(season.poster)]</value>
        <value condition="Container.Content(episodes)">$INFO[ListItem.Art(tvshow.poster)]</value>
        <value condition="!IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
        <value>$INFO[ListItem.Icon]</value>
    </variable>

    <variable name="Label2Var">
        <value condition="Container.Content(movies) + [StringCompare(ListItem.Label2,ListItem.Rating) | StringCompare(ListItem.Label2,ListItem.Year)]">$INFO[ListItem.Genre]</value>
        <value condition="Container.Content(tvshows) + [StringCompare(ListItem.Label2,ListItem.Rating) | StringCompare(ListItem.Label2,ListItem.Premiered)]">$INFO[ListItem.Genre]</value>
        <value condition="Container.Content(seasons)">[LOWERCASE]$INFO[ListItem.Property(UnWatchedEpisodes),, $LOCALIZE[16101]][/LOWERCASE]</value>
        <value>$INFO[ListItem.Label2]</value>
    </variable>

    <variable name="RatingFlagVar">
        <value condition="SubString(ListItem.mpaa,US:G) | SubString(ListItem.mpaa,USA:G) | SubString(ListItem.mpaa,Rated G)">MPAA_G_Certificate_US</value>
        <value condition="SubString(ListItem.mpaa,PG-13)">MPAA_PG-13_Certificate_US</value>
        <value condition="Substring(ListItem.mpaa,Rated PG) | StringCompare(ListItem.Mpaa,PG)">MPAA_PG_Certificate_US</value>
        <value condition="SubString(ListItem.mpaa,US:R) | SubString(ListItem.mpaa,USA:R) | SubString(ListItem.mpaa,Rated R) | StringCompare(ListItem.mpaa,R)">MPAA_R_Certificate_US</value>
        <value condition="SubString(ListItem.mpaa,US:NC-17)| SubString(ListItem.mpaa,USA:NC-17)| SubString(ListItem.mpaa,Rated NC-17)">MPAA_NC-17_Certificate_US</value>
        <value condition="substring(ListItem.mpaa,TV-G)">TV-G_Certificate_US</value>
        <value condition="substring(ListItem.mpaa,TV-PG)">TV-PG_Certificate_US</value>
        <value condition="substring(ListItem.mpaa,TV-14)">TV-14_Certificate_US</value>
        <value condition="substring(ListItem.mpaa,TV-MA)">TV-MA_Certificate_US</value>
        <value condition="substring(ListItem.mpaa,TV-Y7)">tv-y7</value>
        <value condition="substring(ListItem.mpaa,TV-Y)">tv-y</value>
        <value>MPAA_NR_Certificate_US</value>
    </variable>
    
    <variable name="OneOrMoreSeasonsVar">
        <value condition="StringCompare(ListItem.Property(TotalSeasons),1)">$LOCALIZE[20373]</value>
        <value>$LOCALIZE[33054]</value>
    </variable>
    <variable name="OneOrMoreEpisodesVar">
        <value condition="StringCompare(ListItem.Property(TotalEpisodes),1)">$LOCALIZE[20359]</value>
        <value>$LOCALIZE[20360]</value>
    </variable>

    <variable name="DuarationVar">
        <value condition="Container.Content(tvshows)">$INFO[Window(Home).Property(NextAired.Runtime)]</value>
        <value>$INFO[ListItem.Duration]</value>
    </variable>

    <variable name="FloorDiffuseVar">
        <value condition="[Control.IsVisible(50) | Control.IsVisible(51) | Window.IsActive(DialogVideoInfo.xml)]">White2</value>
        <value>Floor</value>
    </variable>

    <variable name="NotificationButtonActionsVar">
        <value condition="Window.IsActive(home)">SetFocus(8000)</value>
        <value condition="Window.IsActive(settings)">SetFocus(9000)</value>
        <value condition="Window.IsActive(SettingsCategory.xml) | Window.IsActive(profiles) | Window.IsActive(systeminfo)">SetFocus(6000)</value>
        <value>SetFocus(50)</value>
    </variable>
   
    <variable name="ListItemSeasonVar">
        <value condition="!IntegerGreaterThan(ListItem.Season,9)">$INFO[ListItem.Season,0]</value>
        <value>$INFO[ListItem.Season]</value>
    </variable>
    <variable name="ListItemEpisodeVar">
        <value condition="!IntegerGreaterThan(ListItem.Episode,9)">$INFO[ListItem.Episode,0]</value>
        <value>$INFO[ListItem.Episode]</value>
    </variable>
    <variable name="VideoSeasonVar">
        <value condition="!IntegerGreaterThan(VideoPlayer.Season,9)">$INFO[VideoPlayer.Season,0]</value>
        <value>$INFO[VideoPlayer.Season]</value>
    </variable>
    <variable name="VideoEpisodeVar">
        <value condition="!IntegerGreaterThan(VideoPlayer.Episode,9)">$INFO[VideoPlayer.Episode,0]</value>
        <value>$INFO[VideoPlayer.Episode]</value>
    </variable>

    <variable name="PlayerArtworkVar">
        <value condition="VideoPlayer.Content(episodes) + !IsEmpty(Player.Art(tvshow.clearart))">$INFO[Player.Art(tvshow.clearart)]</value>
        <value>$INFO[Player.Art(clearart)]</value>
    </variable>

    <variable name="VideoPlayerForwardRewindVar">
        <value condition="Player.Forwarding2x | Player.Rewinding2x">2X</value>
        <value condition="Player.Forwarding4x | Player.Rewinding4x">4X</value>
        <value condition="Player.Forwarding8x | Player.Rewinding8x">8X</value>
        <value condition="Player.Forwarding16x | Player.Rewinding16x">16X</value>
        <value condition="Player.Forwarding32x | Player.Rewinding32x">32X</value>
    </variable>

    <variable name="IconOverlay-7Var">
        <value condition="ListItem(-7).IsResumable">overlays/showcase/resumable.png</value>
        <value>$INFO[ListItem(-7).Overlay,overlays/showcase/]</value>
    </variable>
    <variable name="IconOverlay-6Var">
        <value condition="ListItem(-6).IsResumable">overlays/showcase/resumable.png</value>
        <value>$INFO[ListItem(-6).Overlay,overlays/showcase/]</value>
    </variable>
    <variable name="IconOverlay-5Var">
        <value condition="ListItem(-5).IsResumable">overlays/showcase/resumable.png</value>
        <value>$INFO[ListItem(-5).Overlay,overlays/showcase/]</value>
    </variable>
    <variable name="IconOverlay-4Var">
        <value condition="ListItem(-4).IsResumable">overlays/showcase/resumable.png</value>
        <value>$INFO[ListItem(-4).Overlay,overlays/showcase/]</value>
    </variable>
    <variable name="IconOverlay-3Var">
        <value condition="ListItem(-3).IsResumable">overlays/showcase/resumable.png</value>
        <value>$INFO[ListItem(-3).Overlay,overlays/showcase/]</value>
    </variable>
    <variable name="IconOverlay-2Var">
        <value condition="ListItem(-2).IsResumable">overlays/showcase/resumable.png</value>
        <value>$INFO[ListItem(-2).Overlay,overlays/showcase/]</value>
    </variable>
    <variable name="IconOverlay-1Var">
        <value condition="ListItem(-1).IsResumable">overlays/showcase/resumable.png</value>
        <value>$INFO[ListItem(-1).Overlay,overlays/showcase/]</value>
    </variable>
    <variable name="IconOverlay0Var">
        <value condition="Container(53).ListItem.IsResumable">overlays/showcase/resumable.png</value>
        <value>$INFO[ListItem.Overlay,overlays/showcase/]</value>
    </variable>
    <variable name="IconOverlay1Var">
        <value condition="ListItem(1).IsResumable">overlays/showcase/resumable.png</value>
        <value>$INFO[ListItem(1).Overlay,overlays/showcase/]</value>
    </variable>
    <variable name="IconOverlay2Var">
        <value condition="ListItem(2).IsResumable">overlays/showcase/resumable.png</value>
        <value>$INFO[ListItem(2).Overlay,overlays/showcase/]</value>
    </variable>
    <variable name="IconOverlay3Var">
        <value condition="ListItem(3).IsResumable">overlays/showcase/resumable.png</value>
        <value>$INFO[ListItem(3).Overlay,overlays/showcase/]</value>
    </variable>
    <variable name="IconOverlay4Var">
        <value condition="ListItem(4).IsResumable">overlays/showcase/resumable.png</value>
        <value>$INFO[ListItem(4).Overlay,overlays/showcase/]</value>
    </variable>
    <variable name="IconOverlay5Var">
        <value condition="ListItem(5).IsResumable">overlays/showcase/resumable.png</value>
        <value>$INFO[ListItem(5).Overlay,overlays/showcase/]</value>
    </variable>
    <variable name="IconOverlay6Var">
        <value condition="ListItem(6).IsResumable">overlays/showcase/resumable.png</value>
        <value>$INFO[ListItem(6).Overlay,overlays/showcase/]</value>
    </variable>
    <variable name="IconOverlay7Var">
        <value condition="ListItem(7).IsResumable">overlays/showcase/resumable.png</value>
        <value>$INFO[ListItem(7).Overlay,overlays/showcase/]</value>
    </variable>

    <variable name="IconOverlayVar">
        <value condition="ListItem.IsResumable">overlays/resumable.png</value>
        <value>$INFO[ListItem.Overlay,overlays/]</value>
    </variable>

    <variable name="InfoIconOverlayVar">
        <value condition="Control.IsEnabled(9)">overlays/resumable.png</value>
        <value>$INFO[ListItem.Overlay,overlays/]</value>
    </variable>

    <!--<variable name="OverlayVar">
        <value condition="ListItem.IsResumable + IntegerGreaterThan(ListItem.PercentPlayed,82)">overlays/progress/82.5.png</value>
        <value condition="ListItem.IsResumable + IntegerGreaterThan(ListItem.PercentPlayed,74)">overlays/progress/75.png</value>
        <value condition="ListItem.IsResumable + IntegerGreaterThan(ListItem.PercentPlayed,62)">overlays/progress/62.5.png</value>
        <value condition="ListItem.IsResumable + IntegerGreaterThan(ListItem.PercentPlayed,49)">overlays/progress/50.png</value>
        <value condition="ListItem.IsResumable + IntegerGreaterThan(ListItem.PercentPlayed,37)">overlays/progress/37.5.png</value>
        <value condition="ListItem.IsResumable + IntegerGreaterThan(ListItem.PercentPlayed,24)">overlays/progress/25.png</value>
        <value condition="ListItem.IsResumable + IntegerGreaterThan(ListItem.PercentPlayed,12)">overlays/progress/12.5.png</value>
        <value>$INFO[ListItem.Overlay,overlays/progress/]</value>
    </variable>-->
    <variable name="OverlayVar">
        <value condition="ListItem.IsResumable + IntegerGreaterThan(ListItem.PercentPlayed,74)">overlays/list/OverlayWatched75.png</value>
        <value condition="ListItem.IsResumable + IntegerGreaterThan(ListItem.PercentPlayed,49)">overlays/list/OverlayWatched50.png</value>
        <value condition="ListItem.IsResumable + IntegerGreaterThan(ListItem.PercentPlayed,24)">overlays/list/OverlayWatched25.png</value>
        <value>$INFO[ListItem.Overlay,overlays/list/]</value>
    </variable>

    <variable name="ShowCaseNavLabelVar">
        <value condition="Skin.HasSetting(showcasewrap)">$LOCALIZE[31048]</value>
        <value>$LOCALIZE[31047]</value>
    </variable>

    <variable name="TVDayLabelMon">
        <value condition="!IntegerGreaterThan(Container(200).NumItems,0)">$LOCALIZE[11][CR]$INFO[Window(home).Property(NextAired.1.Date)]</value>
        <value>$LOCALIZE[11]$INFO[Container(200).NumItems, (,)][CR]$INFO[Window(home).Property(NextAired.1.Date)]</value>
    </variable>
    <variable name="TVDayLabelTue">
        <value condition="!IntegerGreaterThan(Container(201).NumItems,0)">$LOCALIZE[12][CR]$INFO[Window(home).Property(NextAired.2.Date)]</value>
        <value>$LOCALIZE[12]$INFO[Container(201).NumItems, (,)][CR]$INFO[Window(home).Property(NextAired.2.Date)]</value>
    </variable>
    <variable name="TVDayLabelWed">
        <value condition="!IntegerGreaterThan(Container(202).NumItems,0)">$LOCALIZE[13][CR]$INFO[Window(home).Property(NextAired.3.Date)]</value>
        <value>$LOCALIZE[13]$INFO[Container(202).NumItems, (,)][CR]$INFO[Window(home).Property(NextAired.3.Date)]</value>
    </variable>
    <variable name="TVDayLabelThu">
        <value condition="!IntegerGreaterThan(Container(203).NumItems,0)">$LOCALIZE[14][CR]$INFO[Window(home).Property(NextAired.4.Date)]</value>
        <value>$LOCALIZE[14]$INFO[Container(203).NumItems, (,)][CR]$INFO[Window(home).Property(NextAired.4.Date)]</value>
    </variable>
    <variable name="TVDayLabelFri">
        <value condition="!IntegerGreaterThan(Container(204).NumItems,0)">$LOCALIZE[15][CR]$INFO[Window(home).Property(NextAired.5.Date)]</value>
        <value>$LOCALIZE[15]$INFO[Container(204).NumItems, (,)][CR]$INFO[Window(home).Property(NextAired.5.Date)]</value>
    </variable>
    <variable name="TVDayLabelSat">
        <value condition="!IntegerGreaterThan(Container(205).NumItems,0)">$LOCALIZE[16][CR]$INFO[Window(home).Property(NextAired.6.Date)]</value>
        <value>$LOCALIZE[16]$INFO[Container(205).NumItems, (,)][CR]$INFO[Window(home).Property(NextAired.6.Date)]</value>
    </variable>
    <variable name="TVDayLabelSun">
        <value condition="!IntegerGreaterThan(Container(206).NumItems,0)">$LOCALIZE[17][CR]$INFO[Window(home).Property(NextAired.7.Date)]</value>
        <value>$LOCALIZE[17]$INFO[Container(206).NumItems, (,)][CR]$INFO[Window(home).Property(NextAired.7.Date)]</value>
    </variable>

    <variable name="NotificationSettingsButtonActionVar">
        <value condition="Window.IsActive(videos) | Window.IsActive(videoplaylist)">ActivateWindow(videossettings)</value>
        <value condition="Window.IsActive(musicplaylist) | Window.IsActive(musicfiles) | Window.IsActive(musiclibrary) | Window.IsActive(musicplaylisteditor)">ActivateWindow(musicsettings)</value>
        <value condition="Window.IsActive(programs)">ActivateWindow(programssettings)</value>
        <value condition="Window.IsActive(pictures)">ActivateWindow(picturessettings)</value>
        <value condition="Window.IsActive(weather)">ActivateWindow(weathersettings)</value>
        <value>ActivateWindow(settings)</value>
    </variable>

    <variable name="GlobalPlotVar">
        <value condition="!IsEmpty(ListItem.PlotOutline)">$INFO[ListItem.PlotOutline]</value>
        <value>$INFO[ListItem.Plot]</value>
    </variable>

</includes>